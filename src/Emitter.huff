 /** 
 *  EMITTER HUFF EXERCISE
 *  
 *  The task is to enable this contract, when the function `value(uint256, uint256)` is called, should
 *  emit an event named `Value(uint256 indexed, uint256)`
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function value(uint256, uint256) payable returns()
 
 #define event Value(uint256 indexed, uint256)

 #define macro MAIN() = takes(0) returns(0) {
push1 0x04
push1 0x00
push1 0x00
calldatacopy

push1 0x00
mload

push1 0xe0
shr
dup1

push4 0x3996e656
eq
push1 0x1c
jumpi
push1 0x20
push1 0x00
revert

jumpdest
push1 0x04      // [0x04] offset the function parameters
calldataload    // [first parameter]

push1 0x24
calldataload    // load the second parameter of calldata into the stack [second parameter, first paramter]
push1 0x00
mstore

__EVENT_HASH(Value)  // [sig, first parameter]

push1 0x00
push1 0x20

log2

 }
