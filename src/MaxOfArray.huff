
/** 
 *  MAX_OF_ARRAY HUFF EXERCISE
 *  
 *  In this task, Given an abi encoded array of uint256, return its maximum value. Revert if the array is empty.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function maxOfArray(uint256[]) payable returns(uint256)

#define macro MAIN() = takes(0) returns(0) {
push1 0x04
push1 0x00
push1 0x00
calldatacopy

push1 0x00
mload

push1 0xe0
shr
dup1

push4 0xa9505eb4
eq
push1 0x1c
jumpi
push1 0x20
push1 0x00
revert

jumpdest
push1 0x00
push1 0x24
calldataload
gt
push1 0x2b
jumpi

push1 0x00
push1 0x00
revert

jumpdest
push1 0x24
calldataload

push1 0x00
mstore

jumpdest
push1 0x00
mload        // load the counter = index
dup1
push1 0x00
eq
push1 0x5b
jumpi

push1 0x20   //push 1 byte to the stack
mul          // multiply the index with byte  
push1 0x04   
add         // [0x04] offset the function parameters
calldataload    // [index parameter]
dup1

push1 0x20 
mload        // get the maximum number from 0x20 memory
gt         // check if greater of calldataload

push1 0x01
push1 0x00
mload
sub        // we need to subtract the counter in memory
push1 0x00
mstore

push1 0x32
jumpi

push1 0x20
mstore        // store the greater in the memory

push1 0x32
jump

jumpdest
push1 0x20
push1 0x20
return
}

// 7f00000000000000000000000000000000000000000000000000000000000caf
// fe60005260206000f30000000000000000000000000000000000000000000000
// 0xa9505eb400000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002