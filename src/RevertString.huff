
/**
 *  REVERT_STRING HUFF EXERCISE
 *
 *
 *  When a transaction is being executed within a smart contract, based on the logic of that contract, it can revert if a preset condition is not met.
 *  They're 2 main ways to revert in solidity, 
 *  - using a string error message e,g (`require(x != 0, "Only values above 0");`)
 *  - reverting with a custom error e.g (`if(x == 0) revert OnlyValuesAbove0();`)
 *
 *  The task is to write within the `MAIN` macro below, huff code that reverts (all the time) with the string error message `Only Huff`
*/

#define error Error(string)

#define macro MAIN() = takes(0) returns(0) {

    
    __ERROR(Error)        // [error_selector, message_length, message]
    push1 0x00
    mstore           // [message_length, message]
    
    push1 0x20
    push1 0x04
    mstore      // [message_length, message]
    
    push1 0x09
    push1 0x24
    mstore         // [message]

    push32 0x4f6e6c7920487566660000000000000000000000000000000000000000000000 // "Only Huff"
    push1 0x44
    mstore        // []

    push1 0x64
    push1 0x04  // no need for the selector
    revert



}

// 0x0000000000000000000000000000000000000000000000000000000000000020
// 0000000000000000000000000000000000000000000000000000000000000009
// 4f6e6c7920487566660000000000000000000000000000000000000000000000