
/** 
 *  SIMPLE_STORE HUFF EXERCISE
 *
 *  One of the storage locations available to devs when writing smart contracts is Storage. Its persistent and expensive
 *  
 *  The task is to write within the `MAIN` macro below, 2 functions...
 *      - One named `store()` that takes one function argument and stores it in storage slot 0,
 *      - the second named `read()` that simply returns what is stored at storage slot 0.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function store(uint256) payable returns()
#define function read() payable returns(uint256)


#define macro MAIN() = takes(0) returns(0) {
    push1 0x04
push1 0x00
push1 0x00
calldatacopy

push1 0x00
mload

push1 0xe0
shr
dup1

push4 0x6057361d
eq
push1 0x25
jumpi

push4 0x57de26a4
eq
push1 0x31
jumpi

push1 0x20
push1 0x00
revert

jumpdest
push1 0x04      // [0x04] offset the function parameters
calldataload    // [first parameter]

push1 0x00
sstore

push1 0x20
push1 0x00
return

jumpdest
push1 0x00
sload

push1 0x00
mstore

push1 0x20
push1 0x00

return

}